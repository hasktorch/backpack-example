name:           hasktorch-core
version:        0.1.0.0
synopsis:       Torch for tensors and neural networks in Haskell (backpack example)
description:    core tensor abstractions wrapping raw TH bindings with backpack
category:       Tensors, Machine Learning
homepage:       https://github.com/hasktorch/backpack-example#readme
author:         Sam Stites <sam@stites.io>
license:        BSD3
build-type:     Simple
cabal-version:  >= 1.10

source-repository head
  type: git
  location: https://github.com/hasktorch/backpack-example

-- bundles up all satisfied requirements into into one user-friendly library
library
  default-language: Haskell2010
  build-depends:
      hasktorch-core-indef
    , hasktorch-core-classes
    , hasktorch-raw
  reexported-modules:
      Torch.Core.TensorLong
    , Torch.Core.TensorFloat
    , Torch.Class.Tensor.Copy
  mixins:
     hasktorch-core-indef (Torch.Core.Tensor as Torch.Core.TensorLong)
        requires (TensorCopy as THLongTensorCopy)
   , hasktorch-core-indef (Torch.Core.Tensor as Torch.Core.TensorFloat)
        requires (TensorCopy as THFloatTensorCopy)

-- Have an indefinite package which contains our mixin-able code for all tensors
library hasktorch-core-indef
  default-language: Haskell2010
  build-depends:
      base >=4.7 && <5
    , hasktorch-raw-types
    , hasktorch-raw-signatures
    , hasktorch-core-classes
  hs-source-dirs: indef
  exposed-modules:
      Torch.Core.Tensor

-- (possibly irrelevant, but running into issues) split off the typeclasses from the indefinite
-- package so that no requirements propagate in the reexport of typeclasses
-- from hasktorch-core
library hasktorch-core-classes
  default-language: Haskell2010
  build-depends: base >=4.7 && <5, hasktorch-raw-types
  hs-source-dirs: classes
  exposed-modules: Torch.Class.Tensor.Copy

